{"version":3,"sources":["SearchForm.js","FetchCharacters.js","Characters.js","App.js","reportWebVitals.js","index.js"],"names":["SearchForm","sendKeyWordToParent","useState","keyword","setKeyword","className","class","id","onSubmit","e","preventDefault","type","icon","faSearch","value","placeholder","onChange","target","FetchCharacters","rFilter","filter","pagination","page","characterfilter","filterPage","length","GET_CHARACTERS","gql","useQuery","loading","error","data","characters","info","handleFilter","key","val","results","map","i","index","genderIcon","faMars","gender","faVenus","faGenderless","userType","faUserTag","src","image","alt","name","faGlobe","origin","href","onClick","status","faHeartbeat","species","faDna","Characters","props","state","loadingMessage","handleSearch","bind","handleSetPagination","handlePagination","this","setState","navPrev","prev","currentPage","parseInt","next","pages","navNext","paginationNav","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","client","ApolloClient","uri","cache","InMemoryCache","ReactDOM","render","ApolloProvider","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.486acaa3.chunk.js","sourcesContent":["import React, {useState} from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {faSearch} from '@fortawesome/free-solid-svg-icons'\n\nconst SearchForm = ({ sendKeyWordToParent }) => {\n  const [keyword, setKeyword] = useState('');\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    sendKeyWordToParent(keyword);\n  }\n\n  return(\n    <div className=\"container mt-5\">\n      <header className=\"text-center mt-4 mb-4\">\n        <h1>Wubalubadubdub</h1>\n        <p class=\"text-muted\">Search characters from rick and morty. This is made with react js and graphql</p>\n      </header>\n\n      <form id=\"search-form\" onSubmit={handleSubmit}>\n        <div className=\"input-group shadow-sm\">\n          <button className=\"btn btn-outline-secondary border-2\" type=\"button\" type=\"submit\"><FontAwesomeIcon icon={faSearch} /></button>\n          <input type=\"text\" className=\"form-control border-2\" value={keyword} placeholder=\"Ex. Morty\" onChange={e => setKeyword(e.target.value)} />\n        </div>\n      </form>\n    </div>\n  )\n}\n\nexport default SearchForm\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faDna, faGlobe, faMars, faVenus, faGenderless, faUserTag, faHeartbeat } from '@fortawesome/free-solid-svg-icons'\n\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  useQuery,\n  gql\n} from '@apollo/client';\n\nconst FetchCharacters = ({ rFilter, filter, pagination, page }) => {\n\n  let characterfilter = 'characters';\n  if ( page ) characterfilter = `characters(page: ${page})`;\n\n  if ( filter ) {\n    let filterPage = ( page ) ? `page: ${page},` : '';\n    if ( filter.length > 1) {\n      characterfilter = `characters(${filterPage} filter: { ${filter[0]} : \"${filter[1]}\"} )`;\n    }\n  }\n\n  const GET_CHARACTERS = gql`\n    query {\n      ${characterfilter} {\n        info {\n          count\n          pages\n          next\n          prev\n        }\n        results {\n          name\n          image\n          status\n          species\n          origin {\n            name\n          }\n          gender\n          type\n        }\n      }\n    }\n  `;\n\n  const { loading, error, data } = useQuery(GET_CHARACTERS);\n\n  if (loading) {\n    return(\n      <div className=\"container mt-5\">\n        <div className=\"d-flex justify-content-center align-item-center\">\n          <h2 className=\"text-muted\">Loading...</h2>\n        </div>\n      </div>\n    );\n  }\n\n  if (error) return <p>Error :(</p>;\n\n  // send data to parent\n  pagination(data.characters.info);\n\n  const handleFilter = (key, val) => {\n    rFilter([key, val]);\n  }\n\n  const results = data.characters.results.map((i, index) => {\n    let genderIcon = faMars;\n\n    if ( i.gender == 'Male' ) {\n      genderIcon = faMars;\n    } else if ( i.gender == 'Female' ) {\n      genderIcon = faVenus;\n    } else {\n      genderIcon = faGenderless\n    }\n\n    let userType = '';\n\n    if ( i.type ) {\n      userType = <span className=\"d-block\"><FontAwesomeIcon icon={faUserTag} /> {i.type}</span>\n    }\n\n    return (\n      <div className=\"grid-item shadow-sm\" key={index}>\n        <div className=\"card\">\n          <div className=\"card-image\">\n            <img src={i.image} alt={i.name}></img>\n          </div>\n          <div className=\"card-body\">\n            <h4 class=\"mb-0\"><strong>{i.name}</strong></h4>\n\n            <div className=\"character-details\">\n              <div className=\"xd-grid xgrid-2\">\n                <span className=\"d-block\"><FontAwesomeIcon icon={faGlobe} /> {i.origin.name}</span>\n                <span className=\"d-block\"><a href=\"#\" onClick={() => handleFilter('status', i.status)}><FontAwesomeIcon icon={faHeartbeat} /> {i.status}</a></span>\n                <span className=\"d-block\"><a href=\"#\" onClick={() => handleFilter('species', i.species)}><FontAwesomeIcon icon={faDna} /> {i.species}</a></span>\n                <span className=\"d-block\"><a href=\"#\" onClick={() => handleFilter('gender', i.gender)}><FontAwesomeIcon icon={genderIcon} /> {i.gender}</a></span>\n                { userType }\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  })\n\n  return (\n    <div className=\"container-fluid mt-5 mb-5\">\n      <div className=\"d-grid grid-4\">\n        {results}\n      </div>\n    </div>\n  )\n}\n\nexport default FetchCharacters\n","import React, {Component} from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faDna, faGlobe, faMars, faVenus, faGenderless, faUserTag, faHeartbeat } from '@fortawesome/free-solid-svg-icons'\nimport SearchForm from './SearchForm';\nimport FetchCharacters from './FetchCharacters';\n\nclass Characters extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = { results: this.loadingMessage() }\n\n    this.handleSearch = this.handleSearch.bind(this);\n    this.handleSetPagination = this.handleSetPagination.bind(this);\n    this.handlePagination = this.handlePagination.bind(this);\n    this.handleFilter = this.handleFilter.bind(this);\n  }\n\n  loadingMessage() {\n    return(\n      <div className=\"container mt-5\">\n        <div className=\"d-flex justify-content-center align-item-center\">\n          <h2 className=\"text-muted\">Loading...</h2>\n        </div>\n      </div>\n    )\n  }\n\n  componentDidMount() {\n    this.setState({ results: <FetchCharacters rFilter={this.handleFilter} pagination={this.handleSetPagination} /> })\n  }\n\n  handleFilter(filter) {\n    this.setState({  results: <FetchCharacters rFilter={this.handleFilter} filter={filter} pagination={this.handleSetPagination} /> });\n  }\n\n  handleSearch(keyword) {\n    this.setState({  results: <FetchCharacters rFilter={this.handleFilter} filter={['name', keyword]} pagination={this.handleSetPagination} /> });\n  }\n\n  handlePagination(page) {\n    this.setState({  results: <FetchCharacters rFilter={this.handleFilter} pagination={this.handleSetPagination} page={page}/> });\n  }\n\n  handleSetPagination(pagination) {\n\n    let navPrev = (pagination.prev) ? '' : 'disabled';\n    let currentPage = parseInt(pagination.next - 1) + ' of ' + pagination.pages;\n    let navNext = (pagination.next) ? '' : 'disabled';\n\n    const setPagination = () => {\n\n      return(\n        <div className=\"mb-5 mt-5\">\n          <nav id=\"pagination\">\n            <ul class=\"pagination justify-content-center\">\n              <li class={'page-item ' + navPrev}>\n                <a class=\"page-link\" href=\"#\" onClick={ () => this.handlePagination(pagination.prev) }>Previous</a>\n              </li>\n\n              <li class=\"page-item disabled\">\n                <span class=\"page-link\">{currentPage}</span>\n              </li>\n\n              <li class={'page-item ' + navNext}>\n                <a class=\"page-link\" href=\"#\" onClick={ () => this.handlePagination(pagination.next) }>Next</a>\n              </li>\n            </ul>\n          </nav>\n        </div>\n      )\n    }\n\n    this.setState({\n      paginationNav: setPagination()\n    })\n\n  }\n\n  render() {\n    return(\n      <>\n        <SearchForm sendKeyWordToParent={this.handleSearch}></SearchForm>\n        {this.state.results}\n        {this.state.paginationNav}\n      </>\n    )\n  }\n}\n\nexport default Characters\n","import './App.css';\nimport React, {useState, useEffect} from 'react';\nimport Characters from './Characters';\n\nconst App = () => {\n  return(\n    <div className=\"App\">\n      <Characters />\n    </div>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n} from '@apollo/client';\n\nconst client = new ApolloClient({\n  uri: 'https://rickandmortyapi.com/graphql',\n  cache: new InMemoryCache()\n});\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </ApolloProvider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}